{
  "Version":	"String	데이터 포맷 버전 A.B (A, B 는 자연수) - 뷰어는 자신이 처리할 수 있는 데이터 포맷 버전과 다른 경우 뷰어의 업데이트 또는 드라이버 업데이트가 필요함을 알리게 된다.",
  "Name":		"String	사용자가 선택한 파일명 (CFX96 은 제품 데이터 파일들의 Prefix 명이 된다.)",
  "Path":		"String	위 Name 을 선택한 Path"
  "Date":		"String 사용자가 선택한 파일 생성 시각 yyyyMMdd_HHmmss (형식은 검토 필요)"
  "PCR_Instrument_Serical" :		"String	PCR 장비 Serial"
  "Launcher_Version":	"String	PLRN ONLY, LAUNCHER_PLRN_SPECIFIC_FIELD Launcher Version 이며 PLRN 의 'Run Notes' 의 'Launcher' 필드의 값",
  "Launcher_Position":	"String	PLRN ONLY, LAUNCHER_PLRN_SPECIFIC_FIELD PLRN 의 'Run Notes' 의 'Position' 필드의 값",
  "Plate": {
	  "Tube_Plate":		"String	PLRN ONLY, Parsing 단에서 처리",
	  "Cap_Film":		"String	PLRN ONLY, Parsing 단에서 처리",
	  "WellCount":		"Int	Plate 에 존재하는 Well 의 총 갯수 - 통상 꽉 채우면 96, CFX384 기기는 꽉 채우면 384",
	  "Barcode_Plate":	"String	PLRN ONLY, Plate 바코드 - PLRN 에서 읽는 값",
	  "Barcode_DWP" :	"String PLRN ONLY, DWP 바코드 - PLRN 에서 읽는 값",
	  "Wells": [
		{
			"Position":			"String	Well 의 위치 A01, A02, ~ H01, H02",
			"Type":				"String	- SAMPLE / PC, PC1, PC2, PC3 / NC / SD1, SD2, ~, SD6 / WTCe, MWTCe, XWTCe, MWTC, XWTC - PLRN, CFX96 등 각 경우 Type 결정하는 부분은 코드 참조 필요, 코드와 함께 PLRN_Type 관련.txt 참조"
			"ProductName":		"String	Well 에 적용된 제품 이름 Full Name - 아직 이 부분 채울 해당 기기는 없음, SGRT ??",
			"ProductName_Abbr": "String PLRN ONLY, Well 에 적용된 제품 이름 Abbr",
			"ExtractionType":	"Int	PLRN ONLY, 현재는 Extraction-Free 여부만 존재 (Bool) 하나 확장을 위해 Int 로 정의, 0 : 현재 Extraction-Free 가 아닌 방식, 1 : Extraction-Free",
			"Name":				"String	Well Name - CFX96 Excel Sample 필드, PLRN : PatientNameList",
			"PatientID":		"String	PLRN ONLY, PLRN Well 라인별에 들어가 있는 바코드 (Sample Name)",
			"Urine":			"Bool	Urine 검체 여부 true / false",
			"ClotSample":		"Bool	PLRN ONLY, Clot Sample 여부 true / false",
			"Barcode_Extract":	"String	PLRN ONLY, Extraction 바코드 - FRET A_B_C 의 A, PLRN ExtractBarcode 내에 ' seperated 로 되어 있으므로 A index 로 구해야 함",
			"Barcode_PCR": [
				"PCR 바코드 1, PLRN ONLY - FRET A_B_C 의 B 이며, | seperated 로 여려 개 올 수 있다. PLRN PCRBarcodeList 내에 ' seperated 로 되어 있으므로 B index 로 구해야 함", 
				"PCR 바코드 2, PLRN ONLY", 
				"PCR 바코드 3, PLRN ONLY"
			],
			"Index_Set":		"Int	PLRN ONLY, Panel(? Set) 제품인 경우의 Index - FRET A_B_C 의 C"
		}
	  ]
  },
  "Data": [
	{
		"Channel":	"Int	Channel #	--> CFX96 의 경우 Dye 정보 사용하여 Channel, Dye Mapping Table (기존 뷰어 참조) 에서 값을 얻는다. PLRN 의 경우 Ch1 Dye,Ch2 Dye,Ch3 Dye,Ch4 Dye,Ch5 Dye 를 읽으면 알 수 있다.",
		"Dye" :		"String	FAM, HEX 등의 값을 갖는 String 이며 Mapping Table 형태를 정의한 후 Cal Red 610, Cal 601 등의 다양한 값이 들어오더라도 해당 table 에서 Cal Red 610 의 대표값을 가져오도록 구현",
		"StepData" [
			{
				"Step":		"Int	QuantStep, MeltStep 수행한 Step #",
				"StepType":	"String	Step 종류, 일단 QuantStep / MeltStep 중 한 가지 String 을 넘기는 것으로 하고 차후 Step 종류가 늘어나면 DB 화 하여 ID 를 넘기는 방식으로 확장 필요",
				"StepInfo": {
					"Start":	"Double		Start Step - QuantStep 인 경우 Cycle, MeltStep 인 경우 Start Temperature, Double 이 불가하면 String 으로 정의해야 함",
					"End":		"Double		End Step - QuantStep 인 경우 Cycle, MeltStep 인 경우 Start Temperature, Double 이 불가하면 String 으로 정의해야 함",
					"Increment":"Double		Start, End 사이의 증가량, Temperature 의 경우 0.5 등의 값이 올 수 있음. Double 이 불가하면 String 으로 정의해야 함"
				}
				"WellData": [
					{
						"Position":	"String	Well 의 위치 A01, A02, ~ H01, H02",
						"Target":	"String 제품 Target 명 (Ex. RSV, AdV 등) - 현재 SGRT 이외에는 제공되지 않는 값",
						"Sq":		"Double	Double 이 불가하면 String 으로 정의해야 함, CFX96 의 경우 Sq 값을 저장, logSq 아님",
						"Ct":		"Double	Double 이 불가하면 String 으로 정의해야 함, CFX96 의 경우 Cq Mean 값을 저장",
						"Quantification": [
							"DOUBLE 1st Data, RFU for QuantStep or MeltStep",
							"DOUBLE 2nd Data",
							"DOUBLE 3rd Data",
							"...",
							"DOUBLE 45th Data - Final"
						]
					}
				]
			}
		]
	}
  ]
파일   ->시트(채널)->데이터
구조   ->채널->스탭->웰데이터->포지션,Sq,Ct